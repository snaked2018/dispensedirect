if (!customElements.get('pickup-availability')) {
  customElements.define('pickup-availability', class PickupAvailability extends HTMLElement {
    constructor() {
      super();

      if (!this.hasAttribute('available')) return;
      this.wrapper = document.getElementById('wrapper');
      this.cc = document.querySelector('.click-capture');
      this.drawer = document.getElementById('Pickup-Availability');
      this.onClickRefreshList = this.onClickRefreshList.bind(this);



    }
    connectedCallback() {
      if (this.hasAttribute('available')) {
        this.fetchAvailability(this.dataset.variantId);
      }
    }
    setupAnimation() {
      if (this.tl) this.tl.kill();
      this.tl = gsap.timeline({
        paused: true,
        onStart: () => {
          this.wrapper.classList.add('open-cc');
          this.drawer.style.visibility = 'visible';
        },
        onReverseComplete: () => {
          this.wrapper.classList.remove('open-cc');
          this.drawer.style.visibility = 'hidden';
        }
      });

      this.tl
        .to(this.drawer, {
          x: "0%",
          duration: 0.25
        }, "start")
        .from(this.drawer.querySelectorAll('.side-availability-product, .pickup-availability-list__item'), {
          duration: 0.25,
          x: "30",
          opacity: 0,
          stagger: 0.05
        }, "start+=0.2");
    }
    setupEventListeners() {
      let button = this.querySelector('button');
      if (button) {
        button.addEventListener('click', () => {
          this.tl.play();
        });
      }
      this.drawer.querySelector('.thb-close').addEventListener('click', () => {
        this.tl.reverse();
      });
      this.cc.addEventListener('click', () => {
        this.tl.reverse();
      });
      document.addEventListener('keyup', (e) => {
        if (e.code) {
          if (e.code.toUpperCase() === 'ESCAPE') {
            this.tl.reverse();
          }
        }
      });
    }
    fetchAvailability(variantId) {
      let rootUrl = this.dataset.rootUrl;
      if (!rootUrl.endsWith('/')) {
        rootUrl = rootUrl + '/';
      }
      const variantSectionUrl = `${rootUrl}variants/${variantId}/?section_id=pickup-availability`;

      fetch(variantSectionUrl)
        .then(response => response.text())
        .then(text => {
          const sectionInnerHTML = new DOMParser()
            .parseFromString(text, 'text/html')
            .querySelector('.shopify-section');
          this.renderPreview(sectionInnerHTML);

        })
        .catch(e => {
          const button = this.querySelector('button');
          if (button) button.removeEventListener('click', this.onClickRefreshList);
          this.renderError();
        });
    }

    onClickRefreshList(evt) {
      this.fetchAvailability(this.dataset.variantId);
    }

    renderError() {
      this.innerHTML = '';

      if (this.querySelector('button')) {
        this.querySelector('button').addEventListener('click', this.onClickRefreshList);
      }
    }

    renderPreview(sectionInnerHTML) {
      if (!sectionInnerHTML.querySelector('.pickup-availability-information')) {
        this.querySelector('.pickup-availability-information').innerHTML = "";
        this.removeAttribute('available');
        return;
      }
      this.querySelector('.pickup-availability-information').innerHTML = sectionInnerHTML.querySelector('.pickup-availability-information').innerHTML;
      this.setAttribute('available', '');
      this.drawer.querySelector('.side-panel-content').innerHTML = sectionInnerHTML.querySelector('.side-panel-content').innerHTML;

      this.setupEventListeners();
      this.setupAnimation();
    }
  });
}
