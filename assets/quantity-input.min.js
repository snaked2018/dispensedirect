/**
 *  @class
 *  @function Quantity
 */
if (!customElements.get('quantity-selector')) {
    class QuantityInput extends HTMLElement {
        constructor() {
            super();
            this.input = this.querySelector('.qty');
            this.step = this.input.getAttribute('step');
            this.changeEvent = new Event('change', {
                bubbles: true
            });
            // Create buttons
            this.subtract = this.querySelector('.minus');
            this.add = this.querySelector('.plus');

            // Add functionality to buttons
            this.subtract.addEventListener('click', () => this.change_quantity(-1 * this.step));
            this.add.addEventListener('click', () => this.change_quantity(1 * this.step));

            this.validateQtyRules();
        }
        connectedCallback() {
            this.classList.add('buttons_added');
        }
        change_quantity(change) {
            // Get current value
            let quantity = Number(this.input.value);

            // Ensure quantity is a valid number
            if (isNaN(quantity)) quantity = 1;

            // Check for min & max
            if (this.input.getAttribute('min') > (quantity + change)) {
                return;
            }
            if (this.input.getAttribute('max')) {
                if (this.input.getAttribute('max') < (quantity + change)) {
                    return;
                }
            }

            // Change quantity
            quantity += change;

            // Ensure quantity is always a number
            quantity = Math.max(quantity, 1);

            // Output number
            this.input.value = quantity;

            this.input.dispatchEvent(this.changeEvent);

            this.validateQtyRules();
        }
        validateQtyRules() {
            const value = parseInt(this.input.value);
            if (this.input.min) {
                const min = parseInt(this.input.min);
                this.subtract.classList.toggle('disabled', value <= min);
            }
            if (this.input.max) {
                const max = parseInt(this.input.max);
                this.add.classList.toggle('disabled', value >= max);
            }
        }
    }
    customElements.define('quantity-selector', QuantityInput);
}