if (typeof debounce === 'undefined') {
  function debounce(fn, wait) {
    let t;
    return (...args) => {
      clearTimeout(t);
      t = setTimeout(() => fn.apply(this, args), wait);
    };
  }
}

/**
 *  @class
 *  @function ThemeHeader
 */

if (!customElements.get('theme-header')) {
  class ThemeHeader extends HTMLElement {
    constructor() {
      super();

    }
    connectedCallback() {
      this.container = document.getElementById('wrapper');
      this.header_section = document.querySelector('.header-section');
      this.menu = document.getElementById('mobile-menu');
      this.toggle = this.querySelector('.mobile-toggle');
      this.cc = document.querySelector('.click-capture');
      this.close = this.menu.querySelector('.thb-close');


      // Setup Mobile Menu
      this.setupMenuAnimation();
      this.setupSubMenuEvents();
      this.setupEventListeners();

      // Sticky Header
      if (!this.classList.contains('fixed')) {
        this.header_section.classList.add('has-height');
      }

      // Sticky Header Class
      window.addEventListener('scroll', this.setStickyClass.bind(this), {
        passive: true
      });

      // Set Header Height
      window.addEventListener('scroll', this.setHeaderHeight.bind(this), {
        passive: true
      });

      window.dispatchEvent(new Event('scroll'));


    }
    setupMenuAnimation() {
      this.menutl = gsap.timeline({
        paused: true,
        onStart: () => {
          this.container.classList.add('open-cc');
          gsap.set(this.menu, {
            visibility: "visible"
          });
        },
        onReverseComplete: () => {
          this.container.classList.remove('open-cc');
          gsap.set(this.menu, {
            clearProps: "transform"
          });
        }
      });

      this.menutl
        .to(this.menu, {
          x: "0%",
          duration: 0.25
        }, "start")
        .fromTo(this.menu.querySelectorAll('h6, .searchform, .mobile-menu>li,.mobile-secondary-menu>li, .social-links, .thb-close'), {
          x: "-30",
          opacity: 0
        }, {
          duration: 0.25,
          x: "0",
          opacity: 1,
          stagger: 0.05
        }, "start+=0.2");
    }

    setupSubMenuEvents() {
      this.submenuToggles = this.menu.querySelectorAll('.mobile-menu li.menu-item-has-children>.link-container span');

      this.submenuToggles.forEach((toggle) => {
        toggle.addEventListener('click', (e) => {
          let toggleParent = toggle.parentElement,
            toggleMenu = toggleParent.parentElement.querySelector(':scope .sub-menu');
          if (toggleParent.classList.contains('active')) {
            toggleParent.classList.remove('active');
            toggleMenu.style.display = 'none';
            toggleParent.blur();
          } else {
            toggleParent.classList.add('active');
            toggleMenu.style.display = 'block';
          }
        });
      });
    }
    openDrawer() {
      this.menutl.timeScale(1).play();
    }
    closeDrawer() {
      this.menutl.timeScale(1.5).reverse();
    }

    setupEventListeners() {
      this.toggle.addEventListener('click', this.openDrawer.bind(this));
      this.cc.addEventListener('click', this.closeDrawer.bind(this));
      this.close.addEventListener('click', this.closeDrawer.bind(this));

      document.addEventListener('keyup', (e) => {
        if (e.code) {
          if (e.code.toUpperCase() === 'ESCAPE') {
            this.closeDrawer();
          }
        }
      });
    }

    setStickyClass() {
      let offset = parseInt(this.getBoundingClientRect().top, 10) + document.documentElement.scrollTop;
      this.classList.toggle('hover', window.scrollY > 0);
    }

    setHeaderHeight() {
      let h = this.clientHeight;
      document.documentElement.style.setProperty('--header-height', h + 'px');
    }
  }
  customElements.define('theme-header', ThemeHeader);
}
/**
 *  @class
 *  @function FullMenu
 */
if (!customElements.get('full-menu')) {
  class FullMenu extends HTMLElement {
    constructor() {
      super();

      this.submenus = this.querySelectorAll('.thb-full-menu>.menu-item-has-children:not(.menu-item-has-megamenu)>.sub-menu');
      this.megamenus = this.querySelectorAll('.thb-full-menu>.menu-item-has-megamenu');

      if (!this.submenus.length) {
        return;
      }
      const _this = this;
      // resize on initial load
      window.addEventListener('resize', debounce(function () {
        _this.resizeSubMenus();
        _this.resizeMegaMenus();
      }, 100));

    }
    connectedCallback() {
      if (!this.submenus.length) {
        return;
      }
      document.fonts.ready.then(function () {
        window.dispatchEvent(new Event('resize'));
      });

    }
    resizeMegaMenus() {
      this.megamenus.forEach((megamenu) => {

        let sub_submenu = megamenu.querySelector('.mega-menu-columns');
        sub_submenu.parentElement.style.marginLeft = 0;
        let total = sub_submenu.getBoundingClientRect().left + sub_submenu.offsetWidth;

        if (total > window.innerWidth) {
          sub_submenu.parentElement.style.marginLeft = (window.innerWidth - total) - 50 + 'px';
        } else if (total < window.innerWidth && sub_submenu.getBoundingClientRect().left < 0) {
          sub_submenu.parentElement.style.marginLeft = -1 * (sub_submenu.getBoundingClientRect().left - 50) + 'px';
        } else {
          sub_submenu.parentElement.style.marginLeft = 0;
        }
      });
    }
    resizeSubMenus() {
      this.submenus.forEach((submenu) => {
        let sub_submenus = submenu.querySelectorAll(':scope >.menu-item-has-children>.sub-menu');

        sub_submenus.forEach((sub_submenu) => {
          let w = sub_submenu.offsetWidth,
            l = sub_submenu.parentElement.getBoundingClientRect().left + sub_submenu.parentElement.offsetWidth,
            total = w + l;

          if (total > window.innerWidth) {
            sub_submenu.parentElement.classList.add('left-submenu');
          } else if (sub_submenu.parentElement.classList.contains('left-submenu')) {
            sub_submenu.parentElement.classList.remove('left-submenu');
          }
        });
      });
    }
  }
  customElements.define('full-menu', FullMenu);
}